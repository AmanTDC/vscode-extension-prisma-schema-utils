generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgres"
  url      = "postgres://postgres:postgrespassword@localhost:5432/aeria"
  schemas  = ["auth", "tenant"]
}

model user {
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at    DateTime       @default(now()) @db.Timestamptz(6)
  updated_at    DateTime       @default(now()) @db.Timestamptz(6)
  created_by    String?        @db.Uuid
  updated_by    String?        @db.Uuid
  metadata      Json           @default(dbgenerated("jsonb_build_object()"))
  email         String?        @unique
  phone         String?        @unique
  blood_group   blood_group?
  employee_info employee_info?

  @@schema("auth")
}

model employee_info {
  id                 String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at         DateTime        @default(now()) @db.Timestamptz(6)
  updated_at         DateTime        @default(now()) @db.Timestamptz(6)
  created_by         String?         @db.Uuid
  updated_by         String?         @db.Uuid
  metadata           Json            @default(dbgenerated("jsonb_build_object()"))
  tenant_id          String          @db.Uuid
  employee_id_number String?
  user_id            String          @unique @db.Uuid
  status             employee_status
  upin_number        String?
  temp_password      String?
  upin               String?
  tenant             tenant          @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tenant")
  user               user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")

  @@schema("tenant")
}

model tenant {
  id                      String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at              DateTime        @default(now()) @db.Timestamptz(6)
  updated_at              DateTime        @default(now()) @db.Timestamptz(6)
  created_by              String?         @db.Uuid
  updated_by              String?         @db.Uuid
  metadata                Json            @default(dbgenerated("jsonb_build_object()"))
  name                    String
  registered_company_name String
  cin                     String
  logo_key                String
  upin_key                String
  employee_info           employee_info[]

  @@schema("tenant")
}

enum blood_group {
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
  O_POSITIVE
  O_NEGATIVE

  @@schema("auth")
}

enum employee_status {
  ONBOARDED
  ACTIVE
  INACTIVE

  @@schema("tenant")
}
